# Desabilitar shrinker e otimizações
-dontshrink
-dontoptimize

# Usar nomes únicos para membros de classes
-useuniqueclassmembernames

# Adaptar strings de classes para versões recentes
-adaptclassstrings

# Ignorar warnings e notas durante a obfuscação
-dontnote
-ignorewarnings
-dontwarn

# Manter classes que estendem SpringBootServletInitializer
-keep class * extends org.springframework.boot.web.servlet.support.SpringBootServletInitializer

# Manter classes relacionadas ao Spring Boot Loader
-keep class * extends org.springframework.boot.loader.**

# Manter classes com um método main() público
-keepclasseswithmembers public class * { public static void main(java.lang.String[]);}

# Manter membros de classes que possuem anotações importantes do Spring
-keepclassmembers class * {
    @org.springframework.beans.factory.annotation.Autowired *;
    @org.springframework.beans.factory.annotation.Qualifier *;
    @org.springframework.beans.factory.annotation.Value *;
    @org.springframework.beans.factory.annotation.Required *;
    @org.springframework.context.annotation.Bean *;
    @org.springframework.context.annotation.Primary *;
    @org.springframework.boot.context.properties.ConfigurationProperties *;
    @org.springframework.boot.context.properties.EnableConfigurationProperties *;

    # Métodos de getter e setter de Thymeleaf (para templates HTML)
    * get*();
    void set*(*);
}

# Manter classes com a anotação EnableCaching (para caching no Spring)
-keep @org.springframework.cache.annotation.EnableCaching class *

# Manter classes de configuração do Spring (como @Configuration)
-keep @org.springframework.context.annotation.Configuration class *

# Manter classes com anotações importantes do Spring Boot
-keep @org.springframework.boot.context.properties.ConfigurationProperties class *
-keep @org.springframework.boot.autoconfigure.SpringBootApplication class *

# Manter classes com a anotação @Repository do Spring
-keep @org.springframework.stereotype.Repository class *

# Permitir modificação de acessos aos membros
-allowaccessmodification

# Manter atributos importantes de classes durante a obfuscação
-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,Annotation,EnclosingMethod,RuntimeVisibleAnnotations

# Manter diretórios do Spring Boot AutoConfigure
-keepdirectories org.springframework.boot.autoconfigure

# Manter classes com métodos estáticos específicos
-keepclassmembernames class * {
    java.lang.Class class$(java.lang.String);
    java.lang.Class class$(java.lang.String, boolean);
}

# Manter todas as classes que implementam Serializable
-keep class * implements java.io.Serializable

# Manter membros de enumerações
-keepclassmembers enum * { *; }

# Pacotes e classes específicas de sua aplicação
-keeppackagenames com.github.bat333.stockroom.controller
-keepnames class com.github.bat333.stockroom.controller

# Manter classes de autenticação e segurança (Spring Security)
-keepclassmembernames class com.example.bookportal.api.auth.** { *; }
-keepclassmembernames class com.example.bookportal.api.configs.WebFluxSecurityConfig { *; }

# Manter todos os membros de anotações
-keepclassmembernames @interface * { *; }

# Manter repositórios e entidades do Spring Data
-keepclassmembernames class com.github.bat333.stockroom.repository.** { *; }
-keepclassmembernames class com.github.bat333.stockroom.domain.** { *; }
-keepclassmembernames class com.github.bat333.stockroom.model.** { *; }

# Manter classes específicas de resposta (CustomResponse)
-keep class com.example.bookportal.api.response.CustomResponse { *; }

# Manter classes DTO
-keep class com.github.bat333.stockroom.model.** { *; }

# Manter classes de repositórios Spring Data
-keep class com.github.bat333.stockroom.repository.** { *; }

# Manter entidades do banco de dados
-keep class com.github.bat333.stockroom.domain.** { *; }

# Repackage classes para um novo pacote após a obfuscação
-repackageclasses com.github.bat333.stockroom.proguard #move obfuscated class to new package

# Usar dicionário personalizado de ofuscação para renomeação de classes, métodos e variáveis
-classobfuscationdictionary clasda.dict # Usar dicionário para renomear classes
-obfuscationdictionary diretto.dict # Usar dicionário para renomear variáveis, métodos, etc.

# Ofuscar todos os nomes de classes, métodos e variáveis
-applymapping obfuscation.dict